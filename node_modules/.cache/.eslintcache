[{"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/index.tsx":"1","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/App.tsx":"2","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Music/Music.tsx":"3","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/Profile.tsx":"4","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/News/News.tsx":"5","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Navbar/Navbar.tsx":"6","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Settings/Settings.tsx":"7","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/Header.tsx":"8","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogsContainer.tsx":"9","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx":"10","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"11","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPostsContainer.tsx":"12","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Message/Message.tsx":"13","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx":"14","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogItem/DialogItem.tsx":"15","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/Post/Post.tsx":"16","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/redux-store.ts":"17","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/profileReducer.ts":"18","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/dialogsReducer.ts":"19","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/usersReducer.ts":"20","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/sidebarReducer.ts":"21","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx":"22","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/Users.tsx":"23","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/common/preloader/Preloder.tsx":"24"},{"size":514,"mtime":1668114524449,"results":"25","hashOfConfig":"26"},{"size":1362,"mtime":1668351653106,"results":"27","hashOfConfig":"26"},{"size":127,"mtime":1664304822328,"results":"28","hashOfConfig":"26"},{"size":510,"mtime":1668162846000,"results":"29","hashOfConfig":"26"},{"size":125,"mtime":1664304786815,"results":"30","hashOfConfig":"26"},{"size":1051,"mtime":1668351653101,"results":"31","hashOfConfig":"26"},{"size":132,"mtime":1664304835645,"results":"32","hashOfConfig":"26"},{"size":174,"mtime":1664463981210,"results":"33","hashOfConfig":"26"},{"size":1791,"mtime":1668427248096,"results":"34","hashOfConfig":"26"},{"size":1748,"mtime":1668169516000,"results":"35","hashOfConfig":"26"},{"size":436,"mtime":1664618699467,"results":"36","hashOfConfig":"26"},{"size":1766,"mtime":1668162846000,"results":"37","hashOfConfig":"26"},{"size":281,"mtime":1668114599395,"results":"38","hashOfConfig":"26"},{"size":1411,"mtime":1668169548000,"results":"39","hashOfConfig":"26"},{"size":389,"mtime":1664961381055,"results":"40","hashOfConfig":"26"},{"size":619,"mtime":1664300360675,"results":"41","hashOfConfig":"26"},{"size":525,"mtime":1668426311290,"results":"42","hashOfConfig":"26"},{"size":1524,"mtime":1668170275000,"results":"43","hashOfConfig":"26"},{"size":1906,"mtime":1668351494000,"results":"44","hashOfConfig":"26"},{"size":3103,"mtime":1669135862116,"results":"45","hashOfConfig":"26"},{"size":195,"mtime":1667511001997,"results":"46","hashOfConfig":"26"},{"size":3753,"mtime":1669136978801,"results":"47","hashOfConfig":"26"},{"size":2045,"mtime":1669134528305,"results":"48","hashOfConfig":"26"},{"size":240,"mtime":1669136978796,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xpigxx",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/index.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/App.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Music/Music.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/Profile.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/News/News.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Navbar/Navbar.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Settings/Settings.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/Header.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogsContainer.tsx",["123","124","125"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["126"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPostsContainer.tsx",["127"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Message/Message.tsx",["128"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx",["129","130","131","132","133"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogItem/DialogItem.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/Post/Post.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/redux-store.ts",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/profileReducer.ts",["134"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/dialogsReducer.ts",["135"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/usersReducer.ts",["136"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/sidebarReducer.ts",["137"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx",["138"],[],"import React from 'react';\nimport styles from \"./Users.module.css\";\nimport {connect} from \"react-redux\";\nimport {\n    Follow,\n    SetCurrentPage, SetIsFetching,\n    SetTotalCount,\n    SetUsers,\n    Unfollow,\n    UsersData\n} from \"../../redux/usersReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloder\";\n\ntype MapStatePropsType = {\n    usersPage: UsersData[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\n\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: any) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalCount: (totalUsersCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n}\n\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\n\n\nexport class UsersAPIComponent extends React.Component<UsersPagePropsType> {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n            this.props.toggleIsFetching(false)\n            this.props.setUsers(response.data.items);\n            this.props.setTotalCount(response.data.totalCount)\n        });\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n            this.props.toggleIsFetching(false)\n            this.props.setUsers(response.data.items);\n            this.props.setTotalCount(response.data.totalCount)\n        });\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ?   <Preloader />  : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   usersPage={this.props.usersPage}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   setUsers={this.props.setUsers}\n                   setCurrentPage={this.props.setCurrentPage}\n                   setTotalCount={this.props.setTotalCount}\n                   onPageChanged={this.onPageChanged}\n            />\n        </>\n    }\n\n};\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    console.log(state.usersPage.totalUsersCount)\n\n    return {\n        usersPage: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        follow: (userId: number) => {\n            dispatch(Follow(userId));\n        },\n        unfollow: (userId: number) => {\n            dispatch(Unfollow(userId));\n        },\n        setUsers: (users: any) => {\n            dispatch(SetUsers(users));\n        },\n        setCurrentPage: (currentPage: number) => {\n            dispatch(SetCurrentPage(currentPage))\n        },\n        setTotalCount: (count: number) => {\n            dispatch(SetTotalCount(count))\n        },\n        toggleIsFetching: (isFetching: boolean) => {\n            dispatch(SetIsFetching(isFetching))\n        }\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);\n","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/Users.tsx",["139"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/common/preloader/Preloder.tsx",[],[],{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"144","line":4,"column":5,"nodeType":"142","messageId":"143","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"145","line":4,"column":20,"nodeType":"142","messageId":"143","endLine":4,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":8,"column":17,"nodeType":"148","endLine":8,"endColumn":98},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"149","line":3,"column":9,"nodeType":"142","messageId":"143","endLine":3,"endColumn":16},{"ruleId":"140","severity":1,"message":"150","line":4,"column":9,"nodeType":"142","messageId":"143","endLine":4,"endColumn":20},{"ruleId":"140","severity":1,"message":"151","line":4,"column":22,"nodeType":"142","messageId":"143","endLine":4,"endColumn":37},{"ruleId":"140","severity":1,"message":"145","line":4,"column":39,"nodeType":"142","messageId":"143","endLine":4,"endColumn":48},{"ruleId":"140","severity":1,"message":"152","line":5,"column":9,"nodeType":"142","messageId":"143","endLine":5,"endColumn":18},{"ruleId":"140","severity":1,"message":"153","line":5,"column":20,"nodeType":"142","messageId":"143","endLine":5,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"154","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":43,"column":25,"nodeType":"148","endLine":43,"endColumn":114},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'RootStateType' is defined but never used.","'StoreType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavLink' is defined but never used.","'ActionsType' is defined but never used.","'ProfilePageType' is defined but never used.","'AddPostAC' is defined but never used.","'NewPostText' is defined but never used.","'styles' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]