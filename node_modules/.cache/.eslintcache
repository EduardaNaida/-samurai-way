[{"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/index.tsx":"1","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/App.tsx":"2","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Music/Music.tsx":"3","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/Profile.tsx":"4","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/News/News.tsx":"5","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Navbar/Navbar.tsx":"6","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Settings/Settings.tsx":"7","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/Header.tsx":"8","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogsContainer.tsx":"9","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx":"10","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"11","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPostsContainer.tsx":"12","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Message/Message.tsx":"13","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx":"14","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogItem/DialogItem.tsx":"15","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/Post/Post.tsx":"16","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/redux-store.ts":"17","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/profileReducer.ts":"18","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/dialogsReducer.ts":"19","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/usersReducer.ts":"20","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/sidebarReducer.ts":"21","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx":"22","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/Users.tsx":"23","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/common/preloader/Preloder.tsx":"24","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx":"25","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/authReducer.ts":"26","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/HeaderContainer.tsx":"27","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/api/api.tsx":"28"},{"size":513,"mtime":1669554973403,"results":"29","hashOfConfig":"30"},{"size":1476,"mtime":1669716473513,"results":"31","hashOfConfig":"30"},{"size":127,"mtime":1664304822328,"results":"32","hashOfConfig":"30"},{"size":454,"mtime":1669716436554,"results":"33","hashOfConfig":"30"},{"size":125,"mtime":1664304786815,"results":"34","hashOfConfig":"30"},{"size":1051,"mtime":1668351653101,"results":"35","hashOfConfig":"30"},{"size":132,"mtime":1664304835645,"results":"36","hashOfConfig":"30"},{"size":437,"mtime":1669719759385,"results":"37","hashOfConfig":"30"},{"size":1791,"mtime":1668427248096,"results":"38","hashOfConfig":"30"},{"size":1748,"mtime":1668169516000,"results":"39","hashOfConfig":"30"},{"size":810,"mtime":1669205171831,"results":"40","hashOfConfig":"30"},{"size":1770,"mtime":1669200256298,"results":"41","hashOfConfig":"30"},{"size":281,"mtime":1668114599395,"results":"42","hashOfConfig":"30"},{"size":1411,"mtime":1668169548000,"results":"43","hashOfConfig":"30"},{"size":389,"mtime":1664961381055,"results":"44","hashOfConfig":"30"},{"size":619,"mtime":1664300360675,"results":"45","hashOfConfig":"30"},{"size":685,"mtime":1670148558624,"results":"46","hashOfConfig":"30"},{"size":2174,"mtime":1669205096098,"results":"47","hashOfConfig":"30"},{"size":1941,"mtime":1669198292790,"results":"48","hashOfConfig":"30"},{"size":5104,"mtime":1670149571996,"results":"49","hashOfConfig":"30"},{"size":195,"mtime":1667511001997,"results":"50","hashOfConfig":"30"},{"size":3769,"mtime":1670149637336,"results":"51","hashOfConfig":"30"},{"size":2395,"mtime":1670149637341,"results":"52","hashOfConfig":"30"},{"size":240,"mtime":1669136978796,"results":"53","hashOfConfig":"30"},{"size":1442,"mtime":1669388121967,"results":"54","hashOfConfig":"30"},{"size":835,"mtime":1669723249687,"results":"55","hashOfConfig":"30"},{"size":1494,"mtime":1669888316540,"results":"56","hashOfConfig":"30"},{"size":722,"mtime":1670149312490,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xpigxx",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/index.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/App.tsx",["148"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Music/Music.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/Profile.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/News/News.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Navbar/Navbar.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Settings/Settings.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/Header.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogsContainer.tsx",["149","150","151"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["152"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPostsContainer.tsx",["153"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Message/Message.tsx",["154"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx",["155","156","157","158","159"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogItem/DialogItem.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/Post/Post.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/redux-store.ts",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/profileReducer.ts",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/dialogsReducer.ts",["160","161"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/usersReducer.ts",["162"],[],"import {followAPI, usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\nexport type UsersReducersActionType =\n    | ReturnType<typeof followSuccess>\n    | ReturnType<typeof unfollowSuccess>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalCount>\n    | ReturnType<typeof setIsFetching>\n    | ReturnType<typeof setIsFollowing>\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING';\n\nexport type UsersData = {\n    id: number,\n    name: string\n    followed: boolean\n    photos: {\n        small: string,\n        large: string\n    }\n}\n\nexport type UserPropsType = {\n    users: Array<UsersData>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: Array<any>\n}\n\nconst initialState: UserPropsType = {\n    users: [],\n    pageSize: 100,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nexport const usersReducer = (state: UserPropsType = initialState, action: UsersReducersActionType): UserPropsType => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users, ...state.users]\n            }\n\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING:\n            return {\n                ...state,\n                followingInProgress: action.followingInProgress\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        default:\n            return state;\n    }\n};\n\nexport const followSuccess = (userID: number) => {\n    return {\n        type: FOLLOW,\n        userID: userID\n    } as const\n}\n\nexport const unfollowSuccess = (userID: number) => {\n    return {\n        type: UNFOLLOW,\n        userID: userID\n    } as const\n}\n\nexport const setUsers = (users: Array<UsersData>) => {\n    return {\n        type: SET_USERS,\n        users: users\n    } as const\n}\n\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        currentPage: currentPage\n    } as const\n}\n\nexport const setTotalCount = (totalUsersCount: number) => {\n    return {\n        type: SET_TOTAL_COUNT,\n        count: totalUsersCount\n    } as const\n}\n\nexport const setIsFetching = (isFetching: boolean) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        isFetching\n    } as const\n}\n\nexport const setIsFollowing = (followingInProgress: boolean, userId: number) => {\n    return {\n        type: TOGGLE_IS_FOLLOWING,\n        followingInProgress,\n        userId\n    } as const\n}\n\n\nexport const getUser = (currentPage: number, pageSize: number) => {\n\n    return (dispatch: Dispatch) => {\n        dispatch(setIsFetching(true));\n        usersAPI.getUsersData(currentPage, pageSize)\n            .then(data => {\n                dispatch(setIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalCount(data.totalCount));\n            });\n    }\n}\n\nexport const unfollow = (userId: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setIsFollowing(true, userId))\n        followAPI.unfollowUsers(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unfollowSuccess(userId))\n                }\n                dispatch(setIsFollowing(false, userId))\n            })\n    }\n}\n\nexport const follow = (userId: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setIsFollowing(true, userId))\n        followAPI.followUsers(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(followSuccess(userId))\n                }\n                dispatch(setIsFollowing(false, userId))\n            })\n    }\n}","/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/sidebarReducer.ts",["163"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx",["164"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/Users.tsx",["165","166","167"],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/common/preloader/Preloder.tsx",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx",[],[],["168","169"],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/authReducer.ts",[],[],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/HeaderContainer.tsx",["170"],[],"import React from 'react';\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {setUserData, UserDataType} from \"../../redux/authReducer\";\nimport {Header} from \"./Header\";\nimport axios from \"axios\";\nimport {authMe} from \"../../api/api\";\n\ntype ParamsType = {\n    id: string,\n    email: string,\n    login: string\n}\n\ntype MapStatePropsType = {\n    login: string | null,\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    setUserData: (id: number, email: string, login: string) => void\n}\n\nexport type HeaderPropsType = RouteComponentProps<ParamsType> & MapDispatchPropsType & MapStatePropsType\n\nexport class HeaderContainerAPI extends React.Component<HeaderPropsType> {\n    componentDidMount() {\n        authMe()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {id, email, login} = response.data.data;\n                    this.props.setUserData(id, email, login)\n                    console.log(id, email, login)\n                }\n            });\n    }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state: AppStateType) => ({\n    login: state.auth.login,\n    isAuth: state.auth.isAuth\n})\n\nlet WithURLDataContainer = withRouter(HeaderContainerAPI)\n\nexport const HeaderContainer = connect(mapStateToProps, {\n    setUserData\n})(WithURLDataContainer)",["171","172"],"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/api/api.tsx",["173"],[],"import React from 'react';\nimport axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {'API-KEY': 'c13fa168-cea5-4630-847d-9c0d00665f01'}\n});\n\nexport const usersAPI = {\n    getUsersData(currentPage: number, pageSize: number ){\n        return instance.get( `users?page=${currentPage}&count=${pageSize}`,)\n            .then(response => response.data)\n    }\n}\n\nexport const followAPI = {\n    unfollowUsers(id: number){\n        return instance.delete(`follow/${id}`)\n    },\n    followUsers(id: number) {\n        return instance.post( `follow/${id}`)\n    }\n}\nexport const authMe = () => {\n  return instance.get('auth/me')\n}",["174","175"],{"ruleId":"176","severity":1,"message":"177","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"181","line":4,"column":5,"nodeType":"178","messageId":"179","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"182","line":4,"column":20,"nodeType":"178","messageId":"179","endLine":4,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":19,"column":17,"nodeType":"185","endLine":19,"endColumn":98},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"186","line":3,"column":9,"nodeType":"178","messageId":"179","endLine":3,"endColumn":16},{"ruleId":"176","severity":1,"message":"187","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":4,"column":22,"nodeType":"178","messageId":"179","endLine":4,"endColumn":37},{"ruleId":"176","severity":1,"message":"182","line":4,"column":39,"nodeType":"178","messageId":"179","endLine":4,"endColumn":48},{"ruleId":"176","severity":1,"message":"189","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":18},{"ruleId":"176","severity":1,"message":"190","line":5,"column":20,"nodeType":"178","messageId":"179","endLine":5,"endColumn":31},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"187","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":100,"column":65,"nodeType":"193","messageId":"194","endLine":100,"endColumn":67},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"195","line":5,"column":36,"nodeType":"178","messageId":"179","endLine":5,"endColumn":50},{"ruleId":"176","severity":1,"message":"196","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":24},{"ruleId":"176","severity":1,"message":"197","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":47,"column":25,"nodeType":"185","endLine":48,"endColumn":57},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"176","severity":1,"message":"204","line":5,"column":22,"nodeType":"178","messageId":"179","endLine":5,"endColumn":34},{"ruleId":"200","replacedBy":"205"},{"ruleId":"202","replacedBy":"206"},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"200","replacedBy":"207"},{"ruleId":"202","replacedBy":"208"},"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'RootStateType' is defined but never used.","'StoreType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavLink' is defined but never used.","'ActionsType' is defined but never used.","'ProfilePageType' is defined but never used.","'AddPostAC' is defined but never used.","'NewPostText' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setIsFollowing' is defined but never used.","'unfollowSuccess' is defined but never used.","'followAPI' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'UserDataType' is defined but never used.",["209"],["210"],["209"],["210"],"no-global-assign","no-unsafe-negation"]