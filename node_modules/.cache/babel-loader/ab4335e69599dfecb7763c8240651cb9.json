{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst NEW_POST_TEXT = 'NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst initialState = {\n  postData: [{\n    name: 'Eduarda',\n    message: 'Hello',\n    likes: '15'\n  }, {\n    name: 'Artiom',\n    message: 'Good morning',\n    likes: '20'\n  }],\n  newTextValue: '',\n  profile: null,\n  status: 'Status'\n}; // export type InitialStateType = typeof initialState\n\nexport const profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        const newPost = {\n          name: 'Alex',\n          message: action.postMessage,\n          likes: '10'\n        };\n        return { ...state,\n          newTextValue: '',\n          postData: [...state.postData, newPost]\n        };\n      }\n\n    case NEW_POST_TEXT:\n      {\n        return { ...state,\n          newTextValue: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const AddPostAC = newTextValue => {\n  return {\n    type: ADD_POST,\n    postMessage: newTextValue\n  };\n};\n_c = AddPostAC;\nexport const NewPostText = newText => {\n  return {\n    type: NEW_POST_TEXT,\n    newText: newText\n  };\n};\n_c2 = NewPostText;\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile: profile\n  };\n};\nexport const getUserProfile = userId => {\n  return dispatch => {\n    usersAPI.getProfile(userId).then(response => {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddPostAC\");\n$RefreshReg$(_c2, \"NewPostText\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/profileReducer.ts"],"names":["usersAPI","ADD_POST","NEW_POST_TEXT","SET_USER_PROFILE","initialState","postData","name","message","likes","newTextValue","profile","status","profileReducer","state","action","type","newPost","postMessage","newText","AddPostAC","NewPostText","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data"],"mappings":"AACA,SAASA,QAAT,QAAwB,YAAxB;AAQA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAsBA,MAAMC,YAA6B,GAAG;AAClCC,EAAAA,QAAQ,EAAE,CACN;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,OAAO,EAAE,OAA3B;AAAoCC,IAAAA,KAAK,EAAE;AAA3C,GADM,EAEN;AAACF,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,OAAO,EAAE,cAA1B;AAA0CC,IAAAA,KAAK,EAAE;AAAjD,GAFM,CADwB;AAKlCC,EAAAA,YAAY,EAAE,EALoB;AAMlCC,EAAAA,OAAO,EAAE,IANyB;AAOlCC,EAAAA,MAAM,EAAE;AAP0B,CAAtC,C,CAUA;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAA+F;AAAA,MAA9FC,KAA8F,uEAArET,YAAqE;AAAA,MAAvDU,MAAuD;;AAEzH,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AAAe;AACX,cAAMe,OAAiB,GAAG;AACtBV,UAAAA,IAAI,EAAE,MADgB;AAEtBC,UAAAA,OAAO,EAAEO,MAAM,CAACG,WAFM;AAGtBT,UAAAA,KAAK,EAAE;AAHe,SAA1B;AAMA,eAAO,EACH,GAAGK,KADA;AAEHJ,UAAAA,YAAY,EAAE,EAFX;AAGHJ,UAAAA,QAAQ,EAAE,CAAC,GAAGQ,KAAK,CAACR,QAAV,EAAoBW,OAApB;AAHP,SAAP;AAKH;;AACD,SAAKd,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGW,KADA;AAEHJ,UAAAA,YAAY,EAAEK,MAAM,CAACI;AAFlB,SAAP;AAIH;;AACD,SAAKf,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFb,SAAP;AAIH;;AACD;AACI,aAAOG,KAAP;AA3BR;AA6BH,CA/BM;AAiCP,OAAO,MAAMM,SAAS,GAAIV,YAAD,IAA0B;AAC/C,SAAO;AACHM,IAAAA,IAAI,EAAEd,QADH;AAEHgB,IAAAA,WAAW,EAAER;AAFV,GAAP;AAIH,CALM;KAAMU,S;AAOb,OAAO,MAAMC,WAAW,GAAIF,OAAD,IAAqB;AAC5C,SAAO;AACHH,IAAAA,IAAI,EAAEb,aADH;AAEHgB,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;MAAME,W;AAQb,OAAO,MAAMC,cAAc,GAAIX,OAAD,IAAkB;AAC5C,SAAO;AACHK,IAAAA,IAAI,EAAEZ,gBADH;AAEHO,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAQP,OAAO,MAAMY,cAAc,GAAIC,MAAD,IAAoB;AAC9C,SAAQC,QAAD,IAAwB;AAC3BxB,IAAAA,QAAQ,CAACyB,UAAT,CAAoBF,MAApB,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACH,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAf,CAAR;AACH,KAHL;AAIH,GALD;AAMH,CAPM","sourcesContent":["import {Dispatch} from \"redux\";\nimport { usersAPI} from \"../api/api\";\n\nexport type ProfileReducersActionType =\n    | ReturnType<typeof AddPostAC>\n    | ReturnType<typeof NewPostText>\n    | ReturnType<typeof setUserProfile>\n\n\nconst ADD_POST = 'ADD-POST';\nconst NEW_POST_TEXT = 'NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\n\nexport type PostData = {\n    name: string\n    message: string\n    likes: string\n}\nexport type ProfilePageType = {\n    postData: Array<PostData>\n    newTextValue: string\n    profile: ProfileType | null\n    status: string\n}\n\nexport type ProfileType = {\n    lookingForAJobDescription: string,\n    photos: {\n        small: string | undefined,\n        large: string | undefined\n    }\n}\n\nconst initialState: ProfilePageType = {\n    postData: [\n        {name: 'Eduarda', message: 'Hello', likes: '15'},\n        {name: 'Artiom', message: 'Good morning', likes: '20'}\n    ],\n    newTextValue: '',\n    profile: null,\n    status: 'Status'\n}\n\n// export type InitialStateType = typeof initialState\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileReducersActionType): ProfilePageType => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            const newPost: PostData = {\n                name: 'Alex',\n                message: action.postMessage,\n                likes: '10',\n            }\n\n            return {\n                ...state,\n                newTextValue: '',\n                postData: [...state.postData, newPost]\n            };\n        }\n        case NEW_POST_TEXT: {\n            return {\n                ...state,\n                newTextValue: action.newText\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const AddPostAC = (newTextValue: string) => {\n    return {\n        type: ADD_POST,\n        postMessage: newTextValue\n    } as const\n}\n\nexport const NewPostText = (newText: string) => {\n    return {\n        type: NEW_POST_TEXT,\n        newText: newText\n    } as const\n}\n\n\nexport const setUserProfile = (profile: any) => {\n    return {\n        type: SET_USER_PROFILE,\n        profile: profile\n    } as const\n}\n\n\nexport const getUserProfile = (userId: string) => {\n    return (dispatch: Dispatch) => {\n        usersAPI.getProfile(userId)\n            .then(response => {\n                dispatch(setUserProfile(response.data));\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}