{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport { Follow, SetUsers, Unfollow } from \"../../redux/usersReducer\";\n\nlet mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(Follow(userId));\n    },\n    unfollow: userId => {\n      dispatch(Unfollow(userId));\n    },\n    setUsers: users => {\n      dispatch(SetUsers(users));\n    }\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx"],"names":["connect","Users","Follow","SetUsers","Unfollow","mapStateToProps","state","users","mapDispatchToProps","dispatch","follow","userId","unfollow","setUsers","UsersContainer"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,QAAwD,0BAAxD;;AAcA,IAAIC,eAAe,GAAIC,KAAD,IAA6C;AAC/D,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAA8C;AACnE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAoB;AACxBF,MAAAA,QAAQ,CAACP,MAAM,CAACS,MAAD,CAAP,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAoB;AAC1BF,MAAAA,QAAQ,CAACL,QAAQ,CAACO,MAAD,CAAT,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGN,KAAD,IAAgB;AACtBE,MAAAA,QAAQ,CAACN,QAAQ,CAACI,KAAD,CAAT,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAcA,OAAO,MAAMO,cAAc,GAAGd,OAAO,CAACK,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,KAA7C,CAAvB","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport Users from \"./Users\";\nimport {Follow, SetUsers, Unfollow, UserPropsType} from \"../../redux/usersReducer\";\n\ntype MapStatePropsType = {\n    usersPage: UserPropsType\n}\n\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: any) => void\n}\n\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\n\nlet mapStateToProps = (state: UserPropsType): MapStatePropsType => {\n    return {\n        users: state.users\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        follow: (userId: number) => {\n            dispatch(Follow(userId));\n        },\n        unfollow: (userId: number) => {\n            dispatch(Unfollow(userId));\n        },\n        setUsers: (users: any) => {\n            dispatch(SetUsers(users));\n        }\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\n"]},"metadata":{},"sourceType":"module"}