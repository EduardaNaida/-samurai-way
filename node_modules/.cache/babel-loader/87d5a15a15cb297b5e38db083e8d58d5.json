{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx\";\nimport React from 'react';\nimport { Profile } from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile } from \"../../redux/profileReducer\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProfileContainerAPI extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = '2';\n    }\n\n    this.props.getUserProfile(userId);\n  }\n\n  render() {\n    if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: 'login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet WithURLDataContainer = withRouter(ProfileContainerAPI);\n_c = WithURLDataContainer;\nexport const ProfileContainer = connect(mapStateToProps, {\n  getUserProfile\n})(WithURLDataContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"WithURLDataContainer\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getUserProfile","Redirect","withRouter","ProfileContainerAPI","Component","componentDidMount","userId","props","match","params","render","isAuth","profile","mapStateToProps","state","profilePage","auth","WithURLDataContainer","ProfileContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,cAAR,QAA0D,4BAA1D;AACA,SAAQC,QAAR,EAAuCC,UAAvC,QAAwD,kBAAxD;;AAgBA,OAAO,MAAMC,mBAAN,SAAkCN,KAAK,CAACO,SAAxC,CAAwE;AAE3EC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,GAAT;AACH;;AACD,SAAKC,KAAL,CAAWP,cAAX,CAA0BM,MAA1B;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACxB,wBACI,QAAC,OAAD,OAAa,KAAKJ,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWK;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAhB0E;;AAmB/E,MAAMC,eAAe,GAAIC,KAAD,IAA4C;AAChE,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADxB;AAEHD,IAAAA,MAAM,EAAEG,KAAK,CAACE,IAAN,CAAWL;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIM,oBAAoB,GAAGf,UAAU,CAACC,mBAAD,CAArC;KAAIc,oB;AAEJ,OAAO,MAAMC,gBAAgB,GAAGnB,OAAO,CAACc,eAAD,EAAkB;AACrDb,EAAAA;AADqD,CAAlB,CAAP,CAE7BiB,oBAF6B,CAAzB","sourcesContent":["import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, ProfileType, setUserProfile} from \"../../redux/profileReducer\";\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\n\n\ntype ParamsType = {\n    userId: string\n}\ntype MapStatePropsType = {\n    profile: ProfileType | null\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    getUserProfile: (userId: string) => void\n}\nexport type ProfilePagePropsType = RouteComponentProps<ParamsType> & MapStatePropsType & MapDispatchPropsType\n\nexport class ProfileContainerAPI extends React.Component<ProfilePagePropsType> {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = '2';\n        }\n        this.props.getUserProfile(userId)\n    }\n\n    render() {\n\n        if (!this.props.isAuth) return <Redirect to={'login'}/>\n        return (\n            <Profile {...this.props} profile={this.props.profile}/>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profile: state.profilePage.profile,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet WithURLDataContainer = withRouter(ProfileContainerAPI)\n\nexport const ProfileContainer = connect(mapStateToProps, {\n    getUserProfile\n})(WithURLDataContainer)\n"]},"metadata":{},"sourceType":"module"}