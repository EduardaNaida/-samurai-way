{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogsContainer.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { AddMessage, NewMessage } from \"../../redux/dialogsReducer\";\nimport { Dialogs } from \"./Dialogs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DialogsContainer = props => {\n  let state = props.store.getState();\n\n  const addMessage = () => {\n    props.store.dispatch(AddMessage(state.dialogsPage.newMessage));\n  };\n\n  const onChangeMessage = newMessage => {\n    props.store.dispatch(NewMessage(newMessage));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: /*#__PURE__*/_jsxDEV(Dialogs, {\n      addMessage: addMessage,\n      onChangeMessage: onChangeMessage,\n      store: props.store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/DialogsContainer.tsx"],"names":["React","s","AddMessage","NewMessage","Dialogs","DialogsContainer","props","state","store","getState","addMessage","dispatch","dialogsPage","newMessage","onChangeMessage","dialogs"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AASA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,4BAArC;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AAUA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAwB;AACnD,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,EAAZ;;AAED,QAAMC,UAAU,GAAG,MAAM;AACrBJ,IAAAA,KAAK,CAACE,KAAN,CAAYG,QAAZ,CAAqBT,UAAU,CAACK,KAAK,CAACK,WAAN,CAAkBC,UAAnB,CAA/B;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAID,UAAD,IAAwB;AAC5CP,IAAAA,KAAK,CAACE,KAAN,CAAYG,QAAZ,CAAqBR,UAAU,CAACU,UAAD,CAA/B;AACH,GAFD;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACc,OAAlB;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEL,UAArB;AACS,MAAA,eAAe,EAAEI,eAD1B;AAES,MAAA,KAAK,EAAER,KAAK,CAACE;AAFtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AASH,CApBM;KAAMH,gB","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {\n    ActionsType,\n    DialogsData,\n    MessageData, StoreType,\n} from \"../../redux/store\";\nimport {AddMessage, NewMessage} from \"../../redux/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\n\ntype DialogsType = {\n    // dialogsData: DialogsData[]\n    // messageData: MessageData[]\n    // newMessage: string\n    // dispatch: (action: ActionsType) => void\n    store: StoreType\n}\n\nexport const DialogsContainer = (props: DialogsType) => {\n     let state = props.store.getState();\n\n    const addMessage = () => {\n        props.store.dispatch(AddMessage(state.dialogsPage.newMessage));\n    }\n\n    const onChangeMessage = (newMessage: string) => {\n        props.store.dispatch(NewMessage(newMessage))\n    }\n\n    return (\n\n        <div className={s.dialogs}>\n            <Dialogs addMessage={addMessage}\n                     onChangeMessage={onChangeMessage}\n                     store={props.store}/>\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}