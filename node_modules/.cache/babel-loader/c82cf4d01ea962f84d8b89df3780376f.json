{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { Users } from \"./Users\";\nimport { Follow, SetCurrentPage, SetTotalCount, SetUsers, Unfollow } from \"../../redux/usersReducer\";\n\nlet mapStateToProps = state => {\n  console.log(state.usersPage.totalUsersCount);\n  return {\n    usersPage: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(Follow(userId));\n    },\n    unfollow: userId => {\n      dispatch(Unfollow(userId));\n    },\n    setUsers: users => {\n      dispatch(SetUsers(users));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(SetCurrentPage(currentPage));\n    },\n    setTotalCount: totalUsersCount => {\n      dispatch(SetTotalCount(totalUsersCount));\n    }\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx"],"names":["connect","Users","Follow","SetCurrentPage","SetTotalCount","SetUsers","Unfollow","mapStateToProps","state","console","log","usersPage","totalUsersCount","users","pageSize","currentPage","mapDispatchToProps","dispatch","follow","userId","unfollow","setUsers","setCurrentPage","setTotalCount","UsersContainer"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,aAHJ,EAIIC,QAJJ,EAKIC,QALJ,QAOO,0BAPP;;AA6BA,IAAIC,eAAe,GAAIC,KAAD,IAA4C;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAN,CAAgBC,eAA5B;AAEA,SAAO;AACHD,IAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBE,KADxB;AAEHC,IAAAA,QAAQ,EAAEN,KAAK,CAACG,SAAN,CAAgBG,QAFvB;AAGHF,IAAAA,eAAe,EAAEJ,KAAK,CAACG,SAAN,CAAgBC,eAH9B;AAIHG,IAAAA,WAAW,EAAEP,KAAK,CAACG,SAAN,CAAgBI;AAJ1B,GAAP;AAMH,CATD;;AAUA,IAAIC,kBAAkB,GAAIC,QAAD,IAA8C;AACnE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAoB;AACxBF,MAAAA,QAAQ,CAACf,MAAM,CAACiB,MAAD,CAAP,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAoB;AAC1BF,MAAAA,QAAQ,CAACX,QAAQ,CAACa,MAAD,CAAT,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGR,KAAD,IAAgB;AACtBI,MAAAA,QAAQ,CAACZ,QAAQ,CAACQ,KAAD,CAAT,CAAR;AACH,KATE;AAUHS,IAAAA,cAAc,EAAGP,WAAD,IAAyB;AACrCE,MAAAA,QAAQ,CAACd,cAAc,CAACY,WAAD,CAAf,CAAR;AACH,KAZE;AAaHQ,IAAAA,aAAa,EAAGX,eAAD,IAA6B;AACxCK,MAAAA,QAAQ,CAACb,aAAa,CAACQ,eAAD,CAAd,CAAR;AACH;AAfE,GAAP;AAiBH,CAlBD;;AAoBA,OAAO,MAAMY,cAAc,GAAGxB,OAAO,CAACO,eAAD,EAAkBS,kBAAlB,CAAP,CAA6Cf,KAA7C,CAAvB","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {\n    Follow,\n    SetCurrentPage,\n    SetTotalCount,\n    SetUsers,\n    Unfollow,\n    UsersData\n} from \"../../redux/usersReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\n\ntype MapStatePropsType = {\n    usersPage: UsersData[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\n\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: any) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalCount: (totalUsersCount: number) => void\n}\n\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\n\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    console.log(state.usersPage.totalUsersCount)\n\n    return {\n        usersPage: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        follow: (userId: number) => {\n            dispatch(Follow(userId));\n        },\n        unfollow: (userId: number) => {\n            dispatch(Unfollow(userId));\n        },\n        setUsers: (users: any) => {\n            dispatch(SetUsers(users));\n        },\n        setCurrentPage: (currentPage: number) => {\n            dispatch(SetCurrentPage(currentPage))\n        },\n        setTotalCount: (totalUsersCount: number) => {\n            dispatch(SetTotalCount(totalUsersCount))\n        }\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\n"]},"metadata":{},"sourceType":"module"}