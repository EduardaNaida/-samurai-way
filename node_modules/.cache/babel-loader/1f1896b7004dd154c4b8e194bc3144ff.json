{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport { Post } from \"./Post/Post\";\nimport { Field } from \"redux-form\"; // type MyPostPropsType = {\n//     // postData: PostData[]\n//     profilePage: ProfilePageType\n//     addPostCallback: (postMessage: string) => void\n//     updateNewPostText: (newTextValue: string) => void\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = props => {\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      name: ev.name,\n      message: ev.message,\n      likes: ev.likes\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n\n  const addPost = () => {\n    props.addPostCallback(props.profilePage.newTextValue);\n  };\n\n  const onChangeText = e => {\n    props.updateNewPostText(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.posts,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: 'Write your new post',\n          name: 'text',\n          component: 'input',\n          onChange: onChangeText,\n          value: props.profilePage.newTextValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), getPostData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","MyPosts","props","getPostData","profilePage","postData","map","ev","id","name","message","likes","addPost","addPostCallback","newTextValue","onChangeText","e","updateNewPostText","currentTarget","value","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;AAIA,SAAQC,KAAR,QAAoB,YAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAGhD,MAAIC,WAAW,GAAGD,KAAK,CAACE,WAAN,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,CAACC,EAAD,EAAKC,EAAL,KAAY;AACzD,wBACI,QAAC,IAAD;AAAe,MAAA,IAAI,EAAED,EAAE,CAACE,IAAxB;AAA8B,MAAA,OAAO,EAAEF,EAAE,CAACG,OAA1C;AAAmD,MAAA,KAAK,EAAEH,EAAE,CAACI;AAA7D,OAAWH,EAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJiB,CAAlB;;AAOA,QAAMI,OAAO,GAAG,MAAM;AAClBV,IAAAA,KAAK,CAACW,eAAN,CAAsBX,KAAK,CAACE,WAAN,CAAkBU,YAAxC;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAyC;AAC1Dd,IAAAA,KAAK,CAACe,iBAAN,CAAwBD,CAAC,CAACE,aAAF,CAAgBC,KAAxC;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAErB,CAAC,CAACsB,KAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAE,qBAApB;AACO,UAAA,IAAI,EAAE,MADb;AAEO,UAAA,SAAS,EAAE,OAFlB;AAGO,UAAA,QAAQ,EAAEL,YAHjB;AAG+B,UAAA,KAAK,EAAEb,KAAK,CAACE,WAAN,CAAkBU;AAHxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAaKT,WAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlCM;KAAMF,O","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ActionsType, ProfilePageType, StoreType} from \"../../../redux/store\";\nimport {AddPostAC, NewPostText} from \"../../../redux/profileReducer\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {Field} from \"redux-form\";\n\n// type MyPostPropsType = {\n//     // postData: PostData[]\n//     profilePage: ProfilePageType\n//     addPostCallback: (postMessage: string) => void\n//     updateNewPostText: (newTextValue: string) => void\n// }\n\n\nexport const MyPosts = (props: ProfilePropsType) => {\n\n\n    let getPostData = props.profilePage.postData.map((ev, id) => {\n        return (\n            <Post key={id} name={ev.name} message={ev.message} likes={ev.likes}/>\n        )\n    })\n\n\n    const addPost = () => {\n        props.addPostCallback(props.profilePage.newTextValue);\n    }\n\n    const onChangeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.updateNewPostText(e.currentTarget.value)\n    }\n    return (\n        <div className={s.posts}>\n            <h3>My posts</h3>\n            <form>\n                <div>\n                    <Field placeholder={'Write your new post'}\n                           name={'text'}\n                           component={'input'}\n                           onChange={onChangeText} value={props.profilePage.newTextValue}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>Add post</button>\n                </div>\n            </form>\n            {getPostData}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}