{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { Users } from \"./Users\";\nimport { Follow, SetUsers, Unfollow } from \"../../redux/usersReducer\";\n\nlet mapStateToProps = state => {\n  return {\n    usersPage: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(Follow(userId));\n    },\n    unfollow: userId => {\n      dispatch(Unfollow(userId));\n    },\n    setUsers: users => {\n      dispatch(SetUsers(users));\n    }\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Users/UsersContainer.tsx"],"names":["connect","Users","Follow","SetUsers","Unfollow","mapStateToProps","state","usersPage","users","pageSize","totalUsersCount","currentPage","mapDispatchToProps","dispatch","follow","userId","unfollow","setUsers","UsersContainer"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,QAAmE,0BAAnE;;AAoBA,IAAIC,eAAe,GAAIC,KAAD,IAA4C;AAC9D,SAAO;AACFC,IAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBC,KADzB;AAEHC,IAAAA,QAAQ,EAAEH,KAAK,CAACC,SAAN,CAAgBE,QAFvB;AAGHC,IAAAA,eAAe,EAAEJ,KAAK,CAACC,SAAN,CAAgBG,eAH9B;AAIHC,IAAAA,WAAW,EAAEL,KAAK,CAACC,SAAN,CAAgBI;AAJ1B,GAAP;AAMH,CAPD;;AAQA,IAAIC,kBAAkB,GAAIC,QAAD,IAA8C;AACnE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAoB;AACxBF,MAAAA,QAAQ,CAACX,MAAM,CAACa,MAAD,CAAP,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAoB;AAC1BF,MAAAA,QAAQ,CAACT,QAAQ,CAACW,MAAD,CAAT,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGT,KAAD,IAAgB;AACtBK,MAAAA,QAAQ,CAACV,QAAQ,CAACK,KAAD,CAAT,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAcA,OAAO,MAAMU,cAAc,GAAGlB,OAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CX,KAA7C,CAAvB","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {Follow, SetUsers, Unfollow, UserPropsType, UsersData} from \"../../redux/usersReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\n\ntype MapStatePropsType = {\n    usersPage: UsersData[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\n\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: any) => void\n}\n\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\n\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n         usersPage: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        follow: (userId: number) => {\n            dispatch(Follow(userId));\n        },\n        unfollow: (userId: number) => {\n            dispatch(Unfollow(userId));\n        },\n        setUsers: (users: any) => {\n            dispatch(SetUsers(users));\n        }\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\n"]},"metadata":{},"sourceType":"module"}