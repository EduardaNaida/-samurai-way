{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx\";\nimport React from 'react';\nimport { Profile } from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = '2';\n    }\n\n    this.props.getUserProfile(userId);\n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to={'login'}/>\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n  };\n}; //const AuthRedirectComponent = withAuthRedirect(ProfileContainerAPI);\n// let WithURLDataContainer = withRouter(AuthRedirectComponent)\n//\n// export const ProfileContainer = connect(mapStateToProps, {\n//     getUserProfile\n// })(WithURLDataContainer)\n\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getUserProfile","withRouter","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","render","profile","mapStateToProps","state","profilePage","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,cAAR,QAA0C,4BAA1C;AACA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAgBA,OAAO,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAAqE;AAExEC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,GAAT;AACH;;AACD,SAAKC,KAAL,CAAWR,cAAX,CAA0BO,MAA1B;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAEL;AACA,wBACI,QAAC,OAAD,OAAa,KAAKH,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAhBuE;;AAoB5E,MAAMC,eAAe,GAAIC,KAAD,IAA4C;AAChE,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADxB;AAEHI,IAAAA,MAAM,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAFvB,GAAP;AAIH,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,OAAO,CAClBJ,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CADW,EAElBC,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, ProfileType} from \"../../redux/profileReducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\n\ntype ParamsType = {\n    userId: string\n}\ntype MapStatePropsType = {\n    profile: ProfileType | null,\n    status: string\n}\n\ntype MapDispatchPropsType = {\n    getUserProfile: (userId: string) => void\n}\nexport type ProfilePagePropsType = RouteComponentProps<ParamsType> & MapStatePropsType & MapDispatchPropsType\n\nexport class ProfileContainer extends React.Component<ProfilePagePropsType> {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = '2';\n        }\n        this.props.getUserProfile(userId)\n    }\n\n    render() {\n\n        // if (!this.props.isAuth) return <Redirect to={'login'}/>\n        return (\n            <Profile {...this.props} profile={this.props.profile}/>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status\n    }\n}\n\n//const AuthRedirectComponent = withAuthRedirect(ProfileContainerAPI);\n// let WithURLDataContainer = withRouter(AuthRedirectComponent)\n//\n// export const ProfileContainer = connect(mapStateToProps, {\n//     getUserProfile\n// })(WithURLDataContainer)\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}