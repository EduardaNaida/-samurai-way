{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { DialogItem } from \"./DialogItem/DialogItem\";\nimport { Message } from \"./Message/Message\";\nimport { AddMessage } from \"../../redux/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dialogs = props => {\n  const dialog = props.dialogsData.map(ev => {\n    return /*#__PURE__*/_jsxDEV(DialogItem, {\n      id: ev.id,\n      name: ev.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  const message = props.messageData.map(ev => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      id: ev.id,\n      message: ev.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  });\n\n  const addMessage = () => {\n    props.dispatch(AddMessage(props.newMessage));\n    console.log(AddMessage(props.newMessage));\n  };\n\n  const onChangeMessage = e => {\n    console.log(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogItem,\n      children: dialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onChangeMessage,\n        value: props.newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","AddMessage","Dialogs","props","dialog","dialogsData","map","ev","id","name","message","messageData","addMessage","dispatch","newMessage","console","log","onChangeMessage","e","currentTarget","value","dialogs","dialogItem","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AAEA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAEIC,UAFJ,QAQO,mBARP;;AAiBA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAwB;AAE3C,QAAMC,MAAM,GAAGD,KAAK,CAACE,WAAN,CAAkBC,GAAlB,CAAuBC,EAAD,IAAQ;AACzC,wBACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEA,EAAE,CAACC,EAAnB;AAAuB,MAAA,IAAI,EAAED,EAAE,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJc,CAAf;AAKA,QAAMC,OAAO,GAAGP,KAAK,CAACQ,WAAN,CAAkBL,GAAlB,CAAuBC,EAAD,IAAQ;AAC1C,wBACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,EAAE,CAACC,EAAhB;AAAoB,MAAA,OAAO,EAAED,EAAE,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJe,CAAhB;;AAMA,QAAME,UAAU,GAAG,MAAM;AACrBT,IAAAA,KAAK,CAACU,QAAN,CAAeZ,UAAU,CAACE,KAAK,CAACW,UAAP,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAU,CAACE,KAAK,CAACW,UAAP,CAAtB;AACH,GAHD;;AAKA,QAAMG,eAAe,GAAIC,CAAD,IAAyC;AAC7DH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,aAAF,CAAgBC,KAA5B;AACH,GAFD;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAEtB,CAAC,CAACuB,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEvB,CAAC,CAACwB,UAAlB;AAAA,gBACKlB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEN,CAAC,CAACyB,QAAlB;AAAA,gBACKb;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI;AAAU,QAAA,QAAQ,EAAEO,eAApB;AAAqC,QAAA,KAAK,EAAEd,KAAK,CAACW;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CAvCM;KAAMV,O","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {\n    ActionsType,\n    AddMessage,\n    AddPostAC,\n    DialogsData,\n    DialogsPageType,\n    MessageData,\n    PostData\n} from \"../../redux/state\";\n\ntype DialogsType = {\n    dialogsData: DialogsData[]\n    messageData: MessageData[]\n    newMessage: string\n    dispatch: (action: ActionsType) => void\n}\n\nexport const Dialogs = (props: DialogsType) => {\n\n    const dialog = props.dialogsData.map((ev) => {\n        return (\n            <DialogItem id={ev.id} name={ev.name}/>\n        )\n    })\n    const message = props.messageData.map((ev) => {\n        return (\n            <Message id={ev.id} message={ev.message}/>\n        )\n    })\n\n    const addMessage = () => {\n        props.dispatch(AddMessage(props.newMessage));\n        console.log(AddMessage(props.newMessage))\n    }\n\n    const onChangeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        console.log(e.currentTarget.value)\n    }\n\n    return (\n\n        <div className={s.dialogs}>\n            <div className={s.dialogItem}>\n                {dialog}\n            </div>\n            <div className={s.messages}>\n                {message}\n            </div>\n            <div>\n                <textarea onChange={onChangeMessage} value={props.newMessage}></textarea>\n            </div>\n            <div>\n                <button onClick={addMessage}>Send</button>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}