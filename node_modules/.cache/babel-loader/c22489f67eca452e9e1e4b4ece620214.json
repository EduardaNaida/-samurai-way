{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport { Post } from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// type MyPostPropsType = {\n//     // postData: PostData[]\n//     profilePage: ProfilePageType\n//     addPostCallback: (postMessage: string) => void\n//     updateNewPostText: (newTextValue: string) => void\n// }\nconst MyPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Write your new post',\n        name: 'text',\n        component: 'textarea'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n\n_c = MyPostForm;\nconst PostReduxForm = reduxForm({\n  form: 'text'\n})(MyPostForm);\n_c2 = PostReduxForm;\nexport const MyPosts = props => {\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      name: ev.name,\n      message: ev.message,\n      likes: ev.likes\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  });\n\n  const addPost = newTextValue => {\n    console.log(newTextValue.text);\n    props.addPostCallback(newTextValue.text);\n  }; // const onChangeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n  //     props.updateNewPostText(e.currentTarget.value)\n  // }\n  // const onSubmit = (formData: FormDataType) => {\n  //     console.log(formData)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.posts,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostReduxForm, {\n      onSubmit: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), getPostData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c3 = MyPosts;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyPostForm\");\n$RefreshReg$(_c2, \"PostReduxForm\");\n$RefreshReg$(_c3, \"MyPosts\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","MyPostForm","props","handleSubmit","PostReduxForm","form","MyPosts","getPostData","profilePage","postData","map","ev","id","name","message","likes","addPost","newTextValue","console","log","text","addPostCallback","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;AAIA,SAAQC,KAAR,EAAqDC,SAArD,QAAqE,YAArE;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMC,UAAqD,GAAIC,KAAD,IAAW;AAErE,sBACQ;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,qBAApB;AACO,QAAA,IAAI,EAAE,MADb;AAEO,QAAA,SAAS,EAAE;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAYH,CAdD;;KAAMF,U;AAiBN,MAAMG,aAAa,GAAGJ,SAAS,CAAe;AAACK,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAT,CAAwCJ,UAAxC,CAAtB;MAAMG,a;AAGN,OAAO,MAAME,OAAO,GAAIJ,KAAD,IAA6B;AAEhD,MAAIK,WAAW,GAAGL,KAAK,CAACM,WAAN,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,CAACC,EAAD,EAAKC,EAAL,KAAY;AACzD,wBACI,QAAC,IAAD;AAAe,MAAA,IAAI,EAAED,EAAE,CAACE,IAAxB;AAA8B,MAAA,OAAO,EAAEF,EAAE,CAACG,OAA1C;AAAmD,MAAA,KAAK,EAAEH,EAAE,CAACI;AAA7D,OAAWH,EAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJiB,CAAlB;;AAMA,QAAMI,OAAO,GAAIC,YAAD,IAAgC;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAzB;AACAlB,IAAAA,KAAK,CAACmB,eAAN,CAAsBJ,YAAY,CAACG,IAAnC;AACH,GAHD,CARgD,CAahD;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEvB,CAAC,CAACyB,KAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKT,WAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA3BM;MAAMD,O","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ActionsType, ProfilePageType, StoreType} from \"../../../redux/store\";\nimport {AddPostAC, NewPostText} from \"../../../redux/profileReducer\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {Field, FormSubmitHandler, InjectedFormProps, reduxForm} from \"redux-form\";\n\ntype FormDataType = {\n    text: string\n}\n\n// type MyPostPropsType = {\n//     // postData: PostData[]\n//     profilePage: ProfilePageType\n//     addPostCallback: (postMessage: string) => void\n//     updateNewPostText: (newTextValue: string) => void\n// }\n\n\nconst MyPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n\n    return (\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field placeholder={'Write your new post'}\n                           name={'text'}\n                           component={'textarea'}/>\n                </div>\n                <div>\n                    <button>Add post</button>\n                </div>\n            </form>\n    );\n};\n\n\nconst PostReduxForm = reduxForm<FormDataType>({form: 'text'})(MyPostForm)\n\n\nexport const MyPosts = (props: ProfilePropsType) => {\n\n    let getPostData = props.profilePage.postData.map((ev, id) => {\n        return (\n            <Post key={id} name={ev.name} message={ev.message} likes={ev.likes}/>\n        )\n    })\n\n    const addPost = (newTextValue: FormDataType) => {\n        console.log(newTextValue.text)\n        props.addPostCallback(newTextValue.text);\n    }\n\n    // const onChangeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    //     props.updateNewPostText(e.currentTarget.value)\n    // }\n    // const onSubmit = (formData: FormDataType) => {\n    //     console.log(formData)\n    // }\n\n    return (\n        <div className={s.posts}>\n            <h3>My posts</h3>\n            <PostReduxForm onSubmit={addPost}/>\n            {getPostData}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}