{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING';\nconst initialState = {\n  users: [],\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: false\n};\nexport const usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.users, ...state.users]\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING:\n      return { ...state,\n        followingInProgress: action.followingInProgress\n      };\n\n    default:\n      return state;\n  }\n};\nexport const follow = userID => {\n  return {\n    type: FOLLOW,\n    userID: userID\n  };\n};\nexport const unfollow = userID => {\n  return {\n    type: UNFOLLOW,\n    userID: userID\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport const setTotalCount = totalUsersCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    count: totalUsersCount\n  };\n};\nexport const setIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const setIsFollowing = followingInProgress => {\n  return {\n    type: TOGGLE_IS_FOLLOWING,\n    followingInProgress\n  };\n};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/usersReducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userID","followed","count","follow","unfollow","setUsers","setCurrentPage","setTotalCount","setIsFetching","setIsFollowing"],"mappings":"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","sourcesContent":["export type UsersReducersActionType =\n    | ReturnType<typeof follow>\n    | ReturnType<typeof unfollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalCount>\n    | ReturnType<typeof setIsFetching>\n    | ReturnType<typeof setIsFollowing>\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING';\n\nexport type UsersData = {\n    id: number,\n    name: string\n    followed: boolean\n    photos: {\n        small: string,\n        large: string\n    }\n}\n\nexport type UserPropsType = {\n    users: Array<UsersData>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: boolean\n}\n\nconst initialState: UserPropsType = {\n    users: [],\n    pageSize: 100,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: false\n}\n\nexport const usersReducer = (state: UserPropsType = initialState, action: UsersReducersActionType): UserPropsType => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users, ...state.users]\n            }\n\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING:\n            return {\n                ...state,\n                followingInProgress: action.followingInProgress\n            }\n        default:\n            return state;\n    }\n};\n\nexport const follow = (userID: number) => {\n    return {\n        type: FOLLOW,\n        userID: userID\n    } as const\n}\n\nexport const unfollow = (userID: number) => {\n    return {\n        type: UNFOLLOW,\n        userID: userID\n    } as const\n}\n\nexport const setUsers = (users: Array<UsersData>) => {\n    return {\n        type: SET_USERS,\n        users: users\n    } as const\n}\n\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        currentPage: currentPage\n    } as const\n}\n\nexport const setTotalCount = (totalUsersCount: number) => {\n    return {\n        type: SET_TOTAL_COUNT,\n        count: totalUsersCount\n    } as const\n}\n\nexport const setIsFetching = (isFetching: boolean) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        isFetching\n    } as const\n}\n\nexport const setIsFollowing = (followingInProgress: boolean) => {\n    return {\n        type: TOGGLE_IS_FOLLOWING,\n        followingInProgress\n    } as const\n}"]},"metadata":{},"sourceType":"module"}