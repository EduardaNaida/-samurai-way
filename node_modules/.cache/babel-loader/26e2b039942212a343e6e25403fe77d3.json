{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/HeaderContainer.tsx\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setUserData } from \"../../redux/authReducer\";\nimport { Header } from \"./Header\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HeaderContainerAPI extends React.Component {\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n      withCredentials: true\n    }).then(response => {\n      debugger;\n\n      if (response.data.resultCode === 0) {\n        let {\n          userId,\n          email,\n          login\n        } = response.data.data;\n        this.props.setUserData(userId, email, login);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;\n\nconst mapStateToProps = state => ({});\n\nlet WithURLDataContainer = withRouter(HeaderContainerAPI);\n_c = WithURLDataContainer;\nexport const HeaderContainer = connect(mapStateToProps, {\n  setUserData\n})(WithURLDataContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"WithURLDataContainer\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/HeaderContainer.tsx"],"names":["React","withRouter","connect","setUserData","Header","axios","HeaderContainerAPI","Component","componentDidMount","get","withCredentials","then","response","data","resultCode","userId","email","login","props","render","mapStateToProps","state","WithURLDataContainer","HeaderContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAAwC,yBAAxC;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAkBA,OAAO,MAAMC,kBAAN,SAAiCN,KAAK,CAACO,SAAvC,CAAkE;AACrEC,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,KAAK,CAACI,GAAN,CAAW,sDAAX,EAAkE;AAC9DC,MAAAA,eAAe,EAAE;AAD6C,KAAlE,EAGKC,IAHL,CAGUC,QAAQ,IAAI;AACd;;AACA,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChC,YAAI;AAACC,UAAAA,MAAD;AAASC,UAAAA,KAAT;AAAgBC,UAAAA;AAAhB,YAAyBL,QAAQ,CAACC,IAAT,CAAcA,IAA3C;AACA,aAAKK,KAAL,CAAWf,WAAX,CAAuBY,MAAvB,EAA+BC,KAA/B,EAAsCC,KAAtC;AACH;AACJ,KATL;AAUH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD,OAAY,KAAKD;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAlBoE;AAmBxE;;AAGD,MAAME,eAAe,GAAIC,KAAD,KAA0B,EAA1B,CAAxB;;AAEA,IAAIC,oBAAoB,GAAGrB,UAAU,CAACK,kBAAD,CAArC;KAAIgB,oB;AAEJ,OAAO,MAAMC,eAAe,GAAGrB,OAAO,CAACkB,eAAD,EAAkB;AACpDjB,EAAAA;AADoD,CAAlB,CAAP,CAE5BmB,oBAF4B,CAAxB","sourcesContent":["import React from 'react';\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {setUserData, UserDataType} from \"../../redux/authReducer\";\nimport {Header} from \"./Header\";\nimport axios from \"axios\";\n\ntype ParamsType = {\n    userId: string,\n    email: string,\n    login: string\n}\n\ntype MapStatePropsType = {\n    data: UserDataType\n}\n\ntype MapDispatchPropsType = {\n    setUserData: (userId: string, email: string, login: string) => void\n}\n\nexport type HeaderPropsType = RouteComponentProps<ParamsType> & MapStatePropsType & MapDispatchPropsType\n\nexport class HeaderContainerAPI extends React.Component<HeaderPropsType> {\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n            withCredentials: true\n        })\n            .then(response => {\n                debugger\n                if (response.data.resultCode === 0) {\n                    let {userId, email, login} = response.data.data;\n                    this.props.setUserData(userId, email, login)\n                }\n            });\n    }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state: AppStateType) => ({})\n\nlet WithURLDataContainer = withRouter(HeaderContainerAPI)\n\nexport const HeaderContainer = connect(mapStateToProps, {\n    setUserData\n})(WithURLDataContainer)"]},"metadata":{},"sourceType":"module"}