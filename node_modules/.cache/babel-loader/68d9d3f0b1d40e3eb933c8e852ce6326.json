{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst initialState = {\n  users: [{\n    id: 1,\n    name: 'Eduarda',\n    followed: false,\n    avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n  }, {\n    id: 2,\n    name: 'Artiom',\n    followed: true,\n    avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n  }, {\n    id: 3,\n    name: 'Dasha',\n    followed: false,\n    avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n  }, {\n    id: 4,\n    name: 'Ivan',\n    followed: true,\n    avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n  }, {\n    id: 5,\n    name: 'Ekaterina',\n    followed: true,\n    avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n  }]\n};\nexport const usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\nexport const Follow = userID => {\n  return {\n    type: FOLLOW,\n    userID: userID\n  };\n};\n_c = Follow;\nexport const Unfollow = userID => {\n  return {\n    type: UNFOLLOW,\n    userID: userID\n  };\n};\n_c2 = Unfollow;\nexport const SetUsers = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\n_c3 = SetUsers;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Follow\");\n$RefreshReg$(_c2, \"Unfollow\");\n$RefreshReg$(_c3, \"SetUsers\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/redux/usersReducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","name","followed","avatar","usersReducer","state","action","type","map","u","userID","Follow","Unfollow","SetUsers"],"mappings":"AAQA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAaA,MAAMC,YAA2B,GAAG;AAChCC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,MAAM,EAAE;AAJZ,GADG,EAOH;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,MAAM,EAAE;AAJZ,GAPG,EAaH;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,MAAM,EAAE;AAJZ,GAbG,EAmBH;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,MAAM,EAAE;AAJZ,GAnBG,EAyBH;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,MAAM,EAAE;AAJZ,GAzBG;AADyB,CAApC;AAmCA,OAAO,MAAMC,YAAY,GAAG,YAAyF;AAAA,MAAxFC,KAAwF,uEAAjEP,YAAiE;AAAA,MAAnDQ,MAAmD;;AAEjH,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACT,EAAF,KAASM,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGD,CAAJ;AAAOP,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOO,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKb,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACT,EAAF,KAASM,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGD,CAAJ;AAAOP,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOO,CAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKZ,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHN,QAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiB,GAAGO,MAAM,CAACP,KAA3B;AAFJ,OAAP;;AAIJ;AACI,aAAOM,KAAP;AA5BR;AA8BH,CAhCM;AAkCP,OAAO,MAAMM,MAAM,GAAID,MAAD,IAAoB;AACtC,SAAO;AACHH,IAAAA,IAAI,EAAEZ,MADH;AAEHe,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;KAAMC,M;AAOb,OAAO,MAAMC,QAAQ,GAAIF,MAAD,IAAoB;AACxC,SAAO;AACHH,IAAAA,IAAI,EAAEX,QADH;AAEHc,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;MAAME,Q;AAOb,OAAO,MAAMC,QAAQ,GAAId,KAAD,IAA6B;AACjD,SAAO;AACHQ,IAAAA,IAAI,EAAEV,SADH;AAEHE,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;MAAMc,Q","sourcesContent":["import React from 'react';\n\nexport type UsersReducersActionType =\n    | ReturnType<typeof Follow>\n    | ReturnType<typeof Unfollow>\n    | ReturnType<typeof SetUsers>\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\n\nexport type UsersData = {\n    id: number,\n    name: string\n    followed: boolean\n    avatar: string\n}\n\nexport type UserPropsType = {\n    users: UsersData[]\n}\n\nconst initialState: UserPropsType = {\n    users: [\n        {\n            id: 1,\n            name: 'Eduarda',\n            followed: false,\n            avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n        },\n        {\n            id: 2,\n            name: 'Artiom',\n            followed: true,\n            avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n        },\n        {\n            id: 3,\n            name: 'Dasha',\n            followed: false,\n            avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n        },\n        {\n            id: 4,\n            name: 'Ivan',\n            followed: true,\n            avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n        },\n        {\n            id: 5,\n            name: 'Ekaterina',\n            followed: true,\n            avatar: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n        },\n    ]\n}\n\nexport const usersReducer = (state: UserPropsType = initialState, action: UsersReducersActionType): UserPropsType => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...state.users, ...action.users]\n            }\n        default:\n            return state;\n    }\n};\n\nexport const Follow = (userID: number) => {\n    return {\n        type: FOLLOW,\n        userID: userID\n    } as const\n}\n\nexport const Unfollow = (userID: number) => {\n    return {\n        type: UNFOLLOW,\n        userID: userID\n    } as const\n}\n\nexport const SetUsers = (users: Array<UsersData>) => {\n    return {\n        type: SET_USERS,\n        users: users\n    } as const\n}\n"]},"metadata":{},"sourceType":"module"}