{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx\";\nimport React from 'react';\nimport { Profile } from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = '2';\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId); //this.props.updateUserStatus(this.props.status)\n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to={'login'}/>\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateUserStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    userId: state.auth.id\n  };\n}; //const AuthRedirectComponent = withAuthRedirect(ProfileContainerAPI);\n// let WithURLDataContainer = withRouter(AuthRedirectComponent)\n//\n// export const ProfileContainer = connect(mapStateToProps, {\n//     getUserProfile\n// })(WithURLDataContainer)\n\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getUserStatus,\n  updateUserStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getUserProfile","getUserStatus","updateUserStatus","withRouter","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","render","profile","status","mapStateToProps","state","profilePage","auth","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,cAAR,EAAwBC,aAAxB,EAAoDC,gBAApD,QAA2E,4BAA3E;AACA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAmBA,OAAO,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAAqE;AAExEC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,GAAT;AACH;;AACD,SAAKC,KAAL,CAAWV,cAAX,CAA0BS,MAA1B;AACA,SAAKC,KAAL,CAAWT,aAAX,CAAyBQ,MAAzB,EANgB,CAOhB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAEL;AACA,wBACI,QAAC,OAAD,OAAa,KAAKH,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI,OAA7C;AAAsD,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,MAAzE;AAAiF,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWR;AAA1G;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAlBuE;;AAsB5E,MAAMc,eAAe,GAAIC,KAAD,IAA4C;AAChE,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADxB;AAEHC,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFvB;AAGHN,IAAAA,MAAM,EAAEQ,KAAK,CAACE,IAAN,CAAWC;AAHhB,GAAP;AAKH,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAef,OAAO,CAClBN,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA,cAAD;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA;AAAhC,CAAlB,CADW,EAElBC,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, getUserStatus, ProfileType, updateUserStatus} from \"../../redux/profileReducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\n\ntype ParamsType = {\n    userId: string\n}\ntype MapStatePropsType = {\n    profile: ProfileType | null,\n    status: string,\n    userId: number | null\n}\n\ntype MapDispatchPropsType = {\n    getUserProfile: (userId: string) => void,\n    getUserStatus: (status: string) => void,\n    updateUserStatus: (status: string) => void\n}\nexport type ProfilePagePropsType = RouteComponentProps<ParamsType> & MapStatePropsType & MapDispatchPropsType\n\nexport class ProfileContainer extends React.Component<ProfilePagePropsType> {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = '2';\n        }\n        this.props.getUserProfile(userId)\n        this.props.getUserStatus(userId)\n        //this.props.updateUserStatus(this.props.status)\n    }\n\n    render() {\n\n        // if (!this.props.isAuth) return <Redirect to={'login'}/>\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateUserStatus}/>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        userId: state.auth.id\n    }\n}\n\n//const AuthRedirectComponent = withAuthRedirect(ProfileContainerAPI);\n// let WithURLDataContainer = withRouter(AuthRedirectComponent)\n//\n// export const ProfileContainer = connect(mapStateToProps, {\n//     getUserProfile\n// })(WithURLDataContainer)\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}