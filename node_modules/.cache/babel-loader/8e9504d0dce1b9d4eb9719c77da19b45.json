{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { DialogItem } from \"./DialogItem/DialogItem\";\nimport { Message } from \"./Message/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// type DialogsType = {\n//     dialogsPage: DialogsPageType\n//     addMessage: () => void\n//     onChangeMessage: (newMessage: string) => void\n// }\nexport const Dialogs = props => {\n  const dialog = props.dialogsPage.dialogsData.map(ev => {\n    return /*#__PURE__*/_jsxDEV(DialogItem, {\n      id: ev.id,\n      name: ev.name\n    }, ev.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  });\n  const message = props.dialogsPage.messageData.map(ev => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      id: ev.id,\n      message: ev.message\n    }, ev.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  });\n\n  const addMessage = () => {\n    //props.dispatch(AddMessage(props.newMessage));\n    props.addMessage(props.newMessage);\n  };\n\n  const onChangeMessage = e => {\n    props.onChangeMessage(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogItem,\n      children: dialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: onChangeMessage,\n            value: props.dialogsPage.newMessage,\n            placeholder: 'Enter your message'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","Dialogs","props","dialog","dialogsPage","dialogsData","map","ev","id","name","message","messageData","addMessage","newMessage","onChangeMessage","e","currentTarget","value","dialogs","dialogItem","messages","sendMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;AAIA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAEhD,QAAMC,MAAM,GAAGD,KAAK,CAACE,WAAN,CAAkBC,WAAlB,CAA8BC,GAA9B,CAAmCC,EAAD,IAAQ;AACrD,wBACI,QAAC,UAAD;AAAwB,MAAA,EAAE,EAAEA,EAAE,CAACC,EAA/B;AAAmC,MAAA,IAAI,EAAED,EAAE,CAACE;AAA5C,OAAiBF,EAAE,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJc,CAAf;AAKA,QAAME,OAAO,GAAGR,KAAK,CAACE,WAAN,CAAkBO,WAAlB,CAA8BL,GAA9B,CAAmCC,EAAD,IAAQ;AACtD,wBACI,QAAC,OAAD;AAAqB,MAAA,EAAE,EAAEA,EAAE,CAACC,EAA5B;AAAgC,MAAA,OAAO,EAAED,EAAE,CAACG;AAA5C,OAAcH,EAAE,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJe,CAAhB;;AAMA,QAAMI,UAAU,GAAG,MAAM;AACrB;AACAV,IAAAA,KAAK,CAACU,UAAN,CAAiBV,KAAK,CAACW,UAAvB;AACH,GAHD;;AAKA,QAAMC,eAAe,GAAIC,CAAD,IAAyC;AAC7Db,IAAAA,KAAK,CAACY,eAAN,CAAsBC,CAAC,CAACC,aAAF,CAAgBC,KAAtC;AAEH,GAHD;;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACoB,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEpB,CAAC,CAACqB,UAAlB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAEL,CAAC,CAACsB,QAAlB;AAAA,8BACI;AAAA,kBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEZ,CAAC,CAACuB,WAAlB;AAAA,iCACI;AAAU,YAAA,QAAQ,EAAEP,eAApB;AACU,YAAA,KAAK,EAAEZ,KAAK,CAACE,WAAN,CAAkBS,UADnC;AAEU,YAAA,WAAW,EAAE;AAFvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH,CA9CM;KAAMX,O","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\n\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\n// type DialogsType = {\n//     dialogsPage: DialogsPageType\n//     addMessage: () => void\n//     onChangeMessage: (newMessage: string) => void\n// }\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    const dialog = props.dialogsPage.dialogsData.map((ev) => {\n        return (\n            <DialogItem key={ev.id} id={ev.id} name={ev.name}/>\n        )\n    })\n    const message = props.dialogsPage.messageData.map((ev) => {\n        return (\n            <Message key={ev.id} id={ev.id} message={ev.message}/>\n        )\n    })\n\n    const addMessage = () => {\n        //props.dispatch(AddMessage(props.newMessage));\n        props.addMessage(props.newMessage);\n    }\n\n    const onChangeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.onChangeMessage(e.currentTarget.value)\n\n    }\n\n    return (\n\n        <div className={s.dialogs}>\n            <div className={s.dialogItem}>\n                {dialog}\n            </div>\n\n            <div className={s.messages}>\n                <div>{message}</div>\n                <div>\n                    <div className={s.sendMessage}>\n                        <textarea onChange={onChangeMessage}\n                                  value={props.dialogsPage.newMessage}\n                                  placeholder={'Enter your message'}></textarea>\n                    </div>\n                    <div>\n                        <button onClick={addMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}