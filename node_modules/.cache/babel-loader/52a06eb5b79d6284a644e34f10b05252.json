{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/HeaderContainer.tsx\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAuthUserData, logout } from \"../../redux/authReducer\";\nimport { Header } from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class HeaderContainerAPI extends React.Component {\n  componentDidMount() {\n    this.props.getAuthUserData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;\n\nconst mapStateToProps = state => ({\n  login: state.auth.login,\n  isAuth: state.auth.isAuth\n});\n\nlet WithURLDataContainer = withRouter(HeaderContainerAPI);\n_c = WithURLDataContainer;\nexport const HeaderContainer = connect(mapStateToProps, {\n  getAuthUserData,\n  logout\n})(WithURLDataContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"WithURLDataContainer\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/-samurai-way/samurai-way/src/components/Header/HeaderContainer.tsx"],"names":["React","withRouter","connect","getAuthUserData","logout","Header","HeaderContainerAPI","Component","componentDidMount","props","render","mapStateToProps","state","login","auth","isAuth","WithURLDataContainer","HeaderContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,EAAyBC,MAAzB,QAAsC,yBAAtC;AACA,SAAQC,MAAR,QAAqB,UAArB;;AAoBA,OAAO,MAAMC,kBAAN,SAAiCN,KAAK,CAACO,SAAvC,CAAkE;AACrEC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWN,eAAX;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD,OAAY,KAAKD;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAToE;AAUxE;;AAGD,MAAME,eAAe,GAAIC,KAAD,KAA0B;AAC9CC,EAAAA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWD,KAD4B;AAE9CE,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAF2B,CAA1B,CAAxB;;AAKA,IAAIC,oBAAoB,GAAGf,UAAU,CAACK,kBAAD,CAArC;KAAIU,oB;AAEJ,OAAO,MAAMC,eAAe,GAAGf,OAAO,CAACS,eAAD,EAAkB;AACpDR,EAAAA,eADoD;AACnCC,EAAAA;AADmC,CAAlB,CAAP,CAE5BY,oBAF4B,CAAxB","sourcesContent":["import React from 'react';\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\nimport {Header} from \"./Header\";\n\ntype ParamsType = {\n    id: string,\n    email: string,\n    login: string\n}\n\ntype MapStatePropsType = {\n    login: string | null,\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    getAuthUserData: () => void\n    logout: () => void\n}\n\nexport type HeaderPropsType = RouteComponentProps<ParamsType> & MapDispatchPropsType & MapStatePropsType\n\nexport class HeaderContainerAPI extends React.Component<HeaderPropsType> {\n    componentDidMount() {\n        this.props.getAuthUserData()\n    }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state: AppStateType) => ({\n    login: state.auth.login,\n    isAuth: state.auth.isAuth\n})\n\nlet WithURLDataContainer = withRouter(HeaderContainerAPI)\n\nexport const HeaderContainer = connect(mapStateToProps, {\n    getAuthUserData, logout\n})(WithURLDataContainer)"]},"metadata":{},"sourceType":"module"}